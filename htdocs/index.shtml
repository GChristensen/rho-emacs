<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN"
        "http://www.w3.org/TR/html4/loose.dtd">
<html>
<head>
    <title>&rho;Emacs</title>
    <meta http-equiv="Content-Type" content="text/html; charset=utf-8"/>
    <meta http-equiv="cache-control" content="no-cache">
    <link href="style.css" rel="stylesheet" type="text/css"/>
    <link href="js/jquery-ui.min.css" rel="stylesheet" type="text/css"/>
    <script src="js/external/jquery/jquery.js" type="application/javascript"></script>
    <script src="js/jquery-ui.min.js" type="application/javascript"></script>
    <script>
        $(function () {
            if (localStorage.getItem("development")) {
                $('.developer').show();
                $('.tohide').hide();
            }
            $("#accordion").accordion({
                heightStyle: "content",
                collapsible: true,
                active: false
            });
        });
    </script>
</head>

<body>
<!--#include virtual="header.html"-->
<p align="center"><img src="images/logo.png" alt="Logo"></p>
<div align="justify" id="column1">

    <div id="desc_cntnr">
        <div id="desc_text">
                <h3>About</h3>

                <p><b>&rho;Emacs</b> is a <!--s>bloatware from hell</s--> preconfigured distribution of
                    <a href="https://www.gnu.org/software/emacs/" target="_blank">GNU Emacs</a> editor for
                    <b>Microsoft Windows</b>. It offers nearly <b>GNU/Linux</b> Emacs experience in <b>Windows</b>
                    with minimum configuration efforts. A set of additional GNU command-line and development tools are available through the network installer.<br class="tohide" /><br class="tohide" />
                    <a href="#" class="tohide" onclick="$('.developer').show(); $('.tohide').hide(); localStorage.setItem('development', 'true');"
                    >I'm a developer. Please, show me all options...</a>
                </p>

                <h3>Downloads</h3>
                <ul style="list-style-type: none; padding-left: 20px;">
                    <li><img src="images/windows-icon.png"/> <a class="dl-link" href="https://sourceforge.net/projects/rho-emacs/files/Rho%20Emacs%200.3.0/rho-emacs-x86_64-setup-0.3.0.exe/download">Rho Emacs x86_64</a> (Emacs only)</li>
                    <li><img src="images/windows-icon.png"/> <a class="dl-link" href="https://sourceforge.net/projects/rho-emacs/files/Rho%20Emacs%200.3.0/rho-emacs-x86-setup-0.3.0.exe/download">Rho Emacs x86</a> (Emacs only)</li>
                    <li><img src="images/windows-icon.png"/> <a class="dl-link" href="https://sourceforge.net/projects/rho-emacs/files/Rho%20Emacs%200.3.0/rho-setup-0.3.0.exe/download">Rho Emacs network installer</a> (includes development tools)</li>
                </ul>
        </div>
        <div class="tohide" id="desc_video">
            <video src="images/emacs.webm" type="video/webm" autoplay controls/>
        </div>
    </div>
    <h3>Why use &rho;Emacs</h3>

    <p>
        You may prefer <b>&rho;Emacs</b> because:
    <ul style="list-style-type: square">
        <li>Some common posix utilities used by Emacs, such as
            find/grep, diff or aspell, are provided by the distribution and work out of the box.
        </li>
        <li><b>&rho;Emacs</b> uses a dedicated configurable <b>HOME</b> directory which is not reachable by other
            <b>Emacs</b> installations. It's
            even possible to create several <b>&rho;Emacs</b> <b>HOME</b> directories and easily switch between them.
        </li>
        <li>Anything you install with <b>&rho;Emacs</b> (including the <b>HOME</b> directory) could be made portable,
            so you can take your full <b>Emacs</b> environment anywhere on a USB-stick.
        </li>
        <li><b>&rho;Emacs</b> includes several popular preconfigured enhancement libraries that make it look and feel
            more convenient than a regular Emacs.
            <a href="https://melpa.org/" target="_blank">MELPA</a> is enabled by default.
        </li>
    <li class=""><a href="http://spacemacs.org/">Spacemacs</a> look without Spacemacs - <a href="https://github.com/nashamri/spacemacs-theme">Spacemacs theme</a>
        and <a href="https://github.com/TheBB/spaceline">Spaceline</a> mode could be optionally installed without installing Spacemacs itself.
        <li class="developer">All languages and tools you install with <b>&rho;Emacs</b> are accessible from <b>Rho Shell</b> - a command-line environment
            that could be used for lengthy C++ assembles, etc.
        </li>
        <li class="developer">Clojure/Lisp scripting support: a regular installation of <b>&rho;Emacs</b> provides some system wide
            commands which allow to
            execute Clojure/Lisp files as scripts. All scripts are able to seamlessly load libraries or ASDF-systems
            located at <b>&rho;Emacs</b> <b>HOME</b> directory.
        </li>

        </li>
    </ul>
    </p>

    <div class="developer">
    <h3>The components of &rho;Emacs distribution</h3>

    <p>
    <ul style="list-style-type: square">
        <li><b><a href="https://www.gnu.org/software/emacs/" target="_blank">GNU Emacs</a></b> - the editor.</li>
        <ul>
            <li><b>Basic enhancements</b> (optional) - `<a
                    href="https://emacsthemes.com/themes/arjen-theme.html">Arjen</a>' dark theme, <a
                    href="https://en.wikipedia.org/wiki/Source_Code_Pro">Source Code Pro</a> fonts, <a
                    href="https://emacswiki.org/emacs/InteractivelyDoThings">ido</a>,
                <a href="https://www.emacswiki.org/emacs/IbufferMode">ibuffer</a>, <a
                        href="https://www.emacswiki.org/emacs/uniquify">uniquify</a>,
                <a href="https://www.emacswiki.org/emacs/TabBarMode">tabbar</a>, <a
                        href="https://www.emacswiki.org/emacs/SavePlace">save-place</a><!--,
                <a href="https://github.com/jwiegley/nxhtml/blob/master/util/winsav.el">winsaw</a-->, <a
                        href="https://www.emacswiki.org/emacs/LineNumbers">linum</a>,
                <a href="https://www.emacswiki.org/emacs/ColumnMarker">column-marker</a>, <a
                        href="https://www.emacswiki.org/emacs/HighlightSymbol">highlight-symbol</a>,
                <a href="https://www.emacswiki.org/emacs/BookmarkPlus">bookmark+</a>
                and <a href="https://www.emacswiki.org/emacs/ShowParenMode">show-paren</a> modes enabled by default
                (when relevant).
            </li>
            <!--li><b>Advanced enhancements</b> (optional) - <a href="https://www.emacswiki.org/emacs/SrSpeedbar">sr-speedbar</a>,
                <a
                        href="https://www.emacswiki.org/emacs/Yasnippet">yasnippet</a>,
                <a href="https://github.com/bmag/emacs-purpose/wiki">purpose</a> and <a
                        href="https://github.com/emacs-helm/helm/wiki">helm</a> packages preinstalled into
                <a href="https://www.emacswiki.org/emacs/ELPA">elpa</a> directory (additional configuration may be
                required).
            </li-->
            <li><b><a href="http://spacemacs.org/">Spacemacs</a></b> (optional) - Emacs configuration from Star Trek.
            </li>

        </ul>
        <li><b><a href="http://www.msys2.org/">MSYS2</a></b> - a minimalist port of <b><a
                href="https://en.wikipedia.org/wiki/Bourne_shell">Bourne Shell</a></b> for <b>Windows</b> with the
            builtin `pacman' package manager.
        </li>
        <li><b><a href="http://clojure.org/">Clojure</a></b> - Clojure language implementation for JVM.</li>
        <li><b><a href="https://common-lisp.net/">Common Lisp</a></b> - a set of Common Lisp implementations:</li>
        <ul>
            <li><b><a href="http://trac.clozure.com/ccl" target="_blank">Clozure CL</a></b></li>
            <li><b><a href="http://www.sbcl.org" target="_blank">SBCL</a></b></li>
            <li><b><a href="http://clisp.cons.org" target="_blank">CLISP</a></b></li>
            <li><b><a href="http://common-lisp.net/project/armedbear" target="_blank">ABCL</a></b></li>
            <li><b><a href="http://ecls.sourceforge.net" target="_blank">ECL</a></b></li>
        </ul>
        <li><b><a href="http://racket-lang.org" target="_blank" class="">Racket</a></b> - a <a
                href="https://en.wikipedia.org/wiki/Scheme_(programming_language)">scheme</a> dialect (former MzScheme).
        </li>
        <li><b><a href="https://www.python.org/">Python</a></b> versions:
            <ul>
                <li><b><a href="https://winpython.github.io/">Python 2.7</a></b> (currently only in IDLE-based REPL)
                </li>
                <li><b><a href="https://winpython.github.io/">Python 3.7</a></b></li>
            </ul>
        </li>
        <li><b><a href="http://groovy-lang.org/" target="_blank" class="">Groovy</a></b> - Groovy 2 programming language
            + <a href="https://grails.org/">Grails</a> 3 framework.
        <li><b><a href="https://www.oracle.com/java/index.html" target="_blank" class="">Java</a></b>
            <ul>
                <li><b><a href="http://www.oracle.com/technetwork/java/javase/downloads/index.html">JDK</a></b> - Java
                    Development Kit from Oracle
                </li>
                <li><b><a href="http://ant.apache.org/">Apache ANT</a></b></li>
                <li><b><a href="http://maven.apache.org/">Apache Maven</a></b></li>
                <li><b><a href="https://gradle.org/">Gradle</a></b></li>
            </ul>
        </li>
        <li><b>C++</b>
            <ul>
                <li><b><a href="https://mingw-w64.org/doku.php">MinGW 32-bit</a></b> (as a part of MSYS2)</li>
                <li><b><a href="https://mingw-w64.org/doku.php">MinGW 64-bit</a></b> (as a part of MSYS2)</li>
            </ul>
        </li>
    </ul>
    </p>


        <p class="software"><b><span>Any component could be manually upgraded or downgraded - you just need to replace the contents of
                its subfolder under
                the `&lt;<b>&rho;Emacs</b> Installation Directory&gt;/bin'.</span></b></p>

    <h3>Software Details <a href="#" id="expander" onclick="$('#accordion').accordion( 'destroy' );$('#expander').remove()"><img src="images/expand.png"/></a></h3>

    <div id="accordion">

        <h2>GNU Emacs</h2>
        <div>
            <p>The current version of <b>&rho;Emacs</b> includes version 26 of
                <b><a href="http://www.gnu.org/software/emacs" target="_blank">GNU Emacs</a></b> text editor
                with (currently extinct) <b><a
                        href="https://web.archive.org/web/20140819124625/http://www.ourcomments.org:80/Emacs/EmacsW32.html"
                        target="_blank">EmacsW32</a></b>
                extension package (use <span class="mono">M-x customize-group RET emacsw32</span> to explore what it offers).

                It's not recommended to install
                <b>&rho;Emacs</b> at the write-protected system folders.</p>

            <h3>Emacs Home Directory</h3>

            <p><b>&rho;Emacs</b> installer will ask where do you want to store your personal settings and data. The
                following three
                options are available:</p>

            <ul>
                <li><i>Create sandbox environment</i> - installer will ask you to manually specify the path of <b>&rho;Emacs</b>
                    home directory.
                </li>
                <li class=""><i>Portable installation</i> - <b>&rho;Emacs</b> will be installed as a portable
                    distribution. In
                    this case <b>Emacs</b> will use the directory named `home' at the root of the installation as
                    user's personal directory. Installer will also not create shortcuts or perform any other system wide
                    integration.
                </li>
                <li><i>Always use the environment of a current user</i> - <b>Emacs</b> will always use a subfolder
                    inside the
                    `My Documents' folder of a current user.
                </li>
            </ul>
            <p>You can change the path of the home directory of non-portable &rho;Emacs at any time through the submenu
                item named `Set Home
                Directory' at the top `((' menu. <span style="color: red; font-weight: bold;">It's recommended to choose
                a path without spaces or non-ASCII characters for the &rho;Emacs HOME.</span> The current path to <b>&rho;Emacs</b>
                <b>HOME</b> is available in `About Rho' buffer, under
                the <b>Emacs</b> `Help' menu.

            </p>
            <p>It is also possible (for example in a Windows shortcut) to set <b>Emacs</b> home directory through <span class="mono">/HOME</span> command-line argument:</p>
            <p><span class="mono">/HOME:&lt;path to a directory&gt; (e.g.: rho /HOME:D:\gnu\home)</span></p>
            <p><b>Rho</b> will not create component-related directories in it if additional <span class="mono">/GUEST</span> switch is specified.</p>

            <h3>Installing Third Party Emacs Extensions</h3>
            <p>In the most of cases you will probably need only the `Basic Enhancements' package listed above and manually install
                other packages relevant to your needs.</p>
            <h4>Automated installation</h4>
            <p class="indented">

                Automated package installation is possible through the <a href="https://melpa.org/" target="_blank">MELPA</a>
                repository available with <span
                    class="mono">M-x list-packages</span> command.

            </p>
            <h4>Manual installation</h4>
            <div class="indented">
                <p>To install a package manually, you need to place it inside the `&lt;&rho;Emacs Home&gt;/.emacs.d'
                    directory
                    (which is already added to the Emacs load path). There could be two kinds of extensions:
                </p>
                <ol>
                    <li>A single-file extension. In this case it's just necessary to put the corresponding .el file into
                        the `.emacs.d' folder, for example: `&lt;&rho;Emacs Home&gt;/.emacs.d/foo-package.el'
                    </li>
                    <li>If an extension consists of multiple files, you need to put them into the corresponding
                        subfolder under `.emacs.d'. You will also need to add this subfolder to
                        the Emacs load path, for example, by placing the following elisp code at your `&lt;&rho;Emacs
                        Home&gt;/.emacs' initialization file: `<span class="mono">(add-to-list 'load-path "~/.emacs.d/bar-package/")</span>'.
                    </li>
                </ol>
                Then you should initialize the package according to its manual, for example, by placing `<span
                    class="mono">(require 'some-mode)</span>' line into
                the `~/.emacs'.
            </div>
        </div>

        <h2 class="">Advanced Emacs features</h2>
        <div>
            <p>A quick glimpse at some advanced Emacs features and extensions.</p>

            <h4>User Interface</h4>

            <p>When working on a large project with the huge amount of different files, shells and REPLs, it's often useful
                to open them in several Emacs buffers simultaneously, for example, as at the screenshot below. Such layout allows to get better overview
                and makes it possible to switch between the buffers quickly.

            <p align="center"><img src="images/windows.png" alt="Emacs windows"></p>

            <p>Emacs documentation <a
                    href="http://www.gnu.org/software/emacs/manual/html_node/emacs/Windows.html">section</a> on windows
                explains in detail the commands you can use to split or resize them. Emacs 24+ also has a handy built-in <a
                        href="http://www.emacswiki.org/emacs/SpeedBar">M-x
                    speedbar</a> command, which allows to navigate at the current directory tree visually (by default it opens in a separate frame,
                <a href="http://www.emacswiki.org/emacs/SrSpeedbar" target="_blank">sr-speedbar</a> mode installable from MELPA opens
                speedbar in a existing frame). The ido-mode may be used as a convenient keyboard-driven alternative for
                speedbar. It's also possible to save a current window configuration with winsav save mode (could be
                enabled in
                winsav customization group: <span class="mono">M-x&nbsp;customize-group&nbsp;winsav</span>), although
                it works
                a little bit clumsy.</p>

            <p>If you prefer mouse, the tabbar mode (enabled by default) is a click away. It has one not so
                obvious
                feature - the ability to switch between buffer mode window collections with mouse wheel. Move the mouse
                cursor
                over the tab bar at the top of a window and scroll the mouse wheel. The tabbar mode will switch window
                collections as you scroll.</p>

            <p><a href="http://nschum.de/src/emacs/highlight-symbol/" target="_blank">highlight-symbol</a>, <a
                    href="https://www.emacswiki.org/emacs/ColumnMarker" target="_blank">column-marker</a> and <a
                    href="http://www.emacswiki.org/emacs/LineNumbers" target="_blank">linum</a> modes bring some
                cosmetic
                features to <b>Emacs</b>, which usually could be found only in full-blown IDEs, such as <b>Eclipse</b>.
                Line
                numbering, symbol highlighting (green) and line width limiting "gutter" (blue) are shown at the
                screenshot
                below. The symbol highlighting operations are bound to C-f3, M-f3 and S-f3 keys (all these features will
                be
                available automatically with the relevant major modes, if `Basic enhancements' option was checked during
                the
                installation). The linum mode may work ungraceful with the auto complete mode.</p>

            <p align="center"><img src="images/highlight.png" alt="Emacs windows"></p>

            <h4>ido-mode</h4>

            <p>The <a href="http://www.emacswiki.org/emacs/InteractivelyDoThings">ido-mode</a> could be described as the
                iswitchb mode on steroids (it also works with find-file and some other cases). Its advantages over
                the default
                iswitchb are: flexy completion (if you have buffers named `core.clj' and `core.cljs'
                you need
                to type only `crls' to narrow the selection), filtering, ability to switch between items with keyboard and
                automatic
                path expansion. With ido it's also possible to quickly
                jump to
                the root or home folders with simple keystrokes (`//' and `~/' respectively). The `Basic enhancements'
                installer
                option makes this mode enabled by default.</p>

            <h4>YASnippet</h4>

            <p><a href="http://capitaomorte.github.com/yasnippet/" target="_blank">YASnippet</a> mode allows to insert predefined code templates
                at the current point location with the ability
                to
                quickly switch between the internal template insertion points. To insert a template you need to type a template
                abbreviation and press the expansion trigger keyboard shortcut (TAB in the case of &rho;Emacs;
                `yas'
                minor mode also should be active). For example, in a buffer with the `Clojure' major mode, type
                `require'
                and press <TAB>. The abbreviation will be expanded into the corresponding template with
                several
                insertion points (you can switch between them with the TAB key). It's possible to find which abbreviation is
                mapped to a
                snippet by visiting its file with `C-c & C-v' sequence (the `&' key in this shortcut should be
                pressed
                on the keyboard).</p>

            <h4>Search And Replace across files</h4>

            <p>The <span class="mono">M-x lgrep</span> and <span class="mono">M-x rgrep</span> Emacs commands do exactly
                this. It's also possible to use a little bit lower level <span class="mono">M-x grep</span> command.
                To replace a text in multiple files, use the dired <a
                        href="http://www.emacswiki.org/emacs/DiredSearchAndReplace"
                        target="_blank">query-replace-regexp</a>
                function. There are <a href="http://www.emacswiki.org/emacs/CategorySearchAndReplace">more</a> options
                which
                could be installed separately.

            <h4>Compare files, create patches</h4>

            <a href="https://www.gnu.org/software/emacs/manual/html_node/emacs/Diff-Mode.html">diff/ediff-mode</a>
            allows to
            perform various file comparison operations and create or apply patches. The behavior of patch/diff utilities could be customized at the corresponding
            Emacs
            customization groups. <span class="mono">M-x occur</span> also may come useful.</p>

            <h4>Version Control</h4>

            <p>Emacs has <a
                    href="https://www.gnu.org/software/emacs/manual/html_node/emacs/Version-Control.html#Version-Control">built-in
                support</a> of
                some common version control systems. Third party VC extensions are also <a
                        href="http://www.emacswiki.org/emacs/CategoryVersionControl">available</a>. Note that you need
                to place
                your ssh keys and other personal VC settings into the &rho;Emacs home directory to use VC from
                <b>Emacs</b>.</p>

            <h4>Project Management</h4>

            <p>Because SLIME is an advanced IDE by itself, there is no need in such monster things as <a
                    href="http://cedet.sourceforge.net/">CEDET</a> or <a href="http://ecb.sourceforge.net/">ECB</a>. But it would be
                nice to
                have a project management system in the sense of Visual Studio `solutions'. Although not obvious, it's
                possible
                in vanilla Emacs with <span class="mono">M-x desktop-save</span> and <span
                        class="mono">M-x desktop-change-dir</span> commands (it's necessary to save a desktop file in
                the
                project root directory). But there is a better third party solution exist: <a
                        href="http://www.emacswiki.org/emacs/BookmarkPlus" target="_blank">Bookmark+</a> desktop
                bookmarks. For
                example, there is a project directory tree with root in the <span
                        class="mono">~/lisp/development/my-app</span>
                and you are editing its files. To add a bookmark to the current desktop, you need to issue the
                following commands:</p>

            <ul>
                <li><span class="mono">C-x p K ~/lisp/development/my-app/.desktop RET</span> - save the desktop file (a
                    desktop
                    file name may be arbitrary in this case, the vanilla desktop mode recognizes only `.emacs.desktop')
                </li>
                <li><span class="mono">my-app-project RET</span> - name the bookmark</li>
            </ul>

            <p>The <span class="mono">C-x r l</span> command
                allows
                to list all bookmarks and quickly switch between saved project desktops, it's also possible to clear the
                current
                desktop with <span class="mono">M-x desktop-clear</span> command.</p>

            <h4>Other Stuff</h4>

            <ul>
                <li><a href="https://www.gnu.org/software/emacs/manual/html_node/emacs/Mark.html#Mark">Mark ring</a> -
                    it's
                    possible move backward through the history of the point locations with <span
                            class="mono">C-u C-SPC</span> and
                    view the location list with <span class="mono">M-x anything-mark-ring</span> command
                </li>
                <li>
                    <a href="https://www.gnu.org/software/emacs/manual/html_node/emacs/Specifying-File-Variables.html#Specifying-File-Variables">File
                        variables</a> - file variables allow to keep some meta-information about a file (text
                    encoding, for
                    example).
                </li>
                <li><a href="https://www.gnu.org/software/emacs/manual/html_node/emacs/Registers.html">Registers</a> - a
                    set of
                    named "clipboards".
                </li>
                <li><a href="https://www.gnu.org/software/emacs/manual/html_node/emacs/Rectangles.html">Rectangle
                    regions</a> -
                    especially useful with <a
                            href="https://www.gnu.org/software/emacs/manual/html_node/emacs/Wdired.html#Wdired">writable
                        dired</a> mode.
                </li>
                <li><a href="https://www.gnu.org/software/emacs/manual/html_node/emacs/File-Archives.html">Archive
                    modes</a> -
                    it's possible to browse and edit files directly in zip/jar or tar.gz archives (the latter is a
                    little bit
                    trickier, because it's necessary to manually toggle the read-only archive buffer flag and save the
                    archive
                    buffer after the editing has been finished).
                </li>
                <li><a href="https://www.gnu.org/software/emacs/manual/html_node/emacs/Keyboard-Macros.html">Keyboard
                    macros</a>
                    - a way to simplify repeating things.
                </li>
                <li><span class="mono">M-x flyspell-buffer</span> - <a
                        href="https://www.gnu.org/software/emacs/manual/html_node/emacs/Spelling.html">spell
                    checking</a> (uses
                    aspell 0.60, it's possible to install additional dictionaries from the `lyx' editor <a
                            href="ftp://ftp.lyx.org/pub/lyx/contrib/aspell6-windows/">packages</a>, or prebuilt Linux
                    packages:
                    extract a dictionary to any folder, open this folder in the Emacs shell and execute the
                    following
                    command: `install-dict &lt;dictionary name&gt; &lt;desired .multi file name&gt;', for example:
                    `install-dict
                    spanish es').
                </li>
                <li><span class="mono">M-x <a href="http://orgmode.org/">org-mode</a></span> - built-in organizer.</li>
            </ul>
        </div>


        <h2>Lisp-based development</h2>
        <div>
            <p class="software">It's possible to install the following Lisp dialects with <b>&rho;Emacs</b>:</p>

            <div align="center">
                <table border="0" cellpadding="3" cellspacing="0" class="simple software">
                    <tr>
                        <th>Lisp dialect</th>
                        <th>Version</th>
                        <th>Emacs mode</th>
                        <th>Dependency management<sup>1</sup></th>
                        <th>Requirements</th>
                    </tr>
                    <tr>
                        <td class="first"><a href="http://clojure.org" target="_blank">Clojure</a></td>
                        <td><span class="">1.9</span></td>
                        <td><a href="https://github.com/clojure-emacs/cider" target="_blank">Cider</a></td>
                        <td><a href="http://github.com/technomancy/leiningen" target="_blank">Leiningen 2</a></td>
                        <td>Java 1.6 or higher</td>
                    </tr>
                    <tr>
                        <td class="first"><a href="http://trac.clozure.com/ccl" target="_blank">Clozure CL</a></td>
                        <td><span class="">1.11</span></td>
                        <td><a href="http://common-lisp.net/project/slime" target="_blank">SLIME</a></td>
                        <td><a href="http://quicklisp.org" target="_blank" class="">Quicklisp</a></td>
                        <td>-</td>
                    </tr>
                    <tr>
                        <td class="first"><a href="http://www.sbcl.org" target="_blank">SBCL</a></td>
                        <td><span class="">1.4.8</span></td>
                        <td><a href="http://common-lisp.net/project/slime" target="_blank">SLIME</a></td>
                        <td><a href="http://quicklisp.org" target="_blank" class="">Quicklisp</a></td>
                        <td>-</td>
                    </tr>
                    <tr>
                        <td class="first"><a href="http://clisp.cons.org" target="_blank">CLISP</a></td>
                        <td>2.48<sup>2</sup></td>
                        <td><a href="http://common-lisp.net/project/slime" target="_blank">SLIME</a></td>
                        <td><a href="http://quicklisp.org" target="_blank" class="">Quicklisp</a></td>
                        <td>-</td>
                    </tr>
                    <tr>
                        <td class="first"><a href="http://common-lisp.net/project/armedbear" target="_blank">ABCL</a>
                        </td>
                        <td class=""><span class="">1.1.5</span></td>
                        <td><a href="http://common-lisp.net/project/slime" target="_blank">SLIME</a></td>
                        <td><a href="http://quicklisp.org" target="_blank" class="">Quicklisp</a></td>
                        <td>Java 1.6 or higher</td>
                    </tr>
                    <tr>
                        <td class="first"><a href="http://ecls.sourceforge.net" target="_blank">ECL</a><sup>3</sup></td>
                        <td>16.1.3</td>
                        <td><a href="http://common-lisp.net/project/slime" target="_blank"> SLIME</a></td>
                        <td><a href="http://quicklisp.org" target="_blank" class="">Quicklisp</a></td>
                        <td><a href="https://visualstudio.microsoft.com/downloads/#build-tools-for-visual-studio-2017">Visual C++ compiler</a>
                        </td>
                    </tr>
                    <tr>
                        <td class="first "><a href="http://racket-lang.org" target="_blank" class="">Racket</a></td>
                        <td class="">7.0</td>
                        <td><a href="http://www.nongnu.org/geiser/" target="_blank">Geiser</a></td>
                        <td><a href="http://planet.plt-scheme.org" target="_blank">PLaneT</a></td>
                        <td>-</td>
                    </tr>
                </table>
            </div>

            <div class="footnotes">
                <p class="indented">
                    <sup>1</sup>
                    <span class="">For the detailed information about dependency management see `Dependency Management' section below.</span><br/>
                    <sup>2</sup> <b>CLISP 2.49</b> contains a bug that prevents it to work with <b>Emacs</b> properly on
                    Windows.<br/>
                    <sup>3</sup> Will not work if path to <b>&rho;Emacs</b> home directory contains spaces or non-ASCII
                    characters.<br/>

                </p>
            </div>

            <h3>SLIME</h3>

            <p class="software"><a href="http://common-lisp.net/project/slime" target="_blank">SLIME</a> is a Emacs
                library used
                to interact with <b>Common Lisp</b> implementations from the editor (Scheme lang. implementation
                included in <b>&rho;Emacs</b>
                uses another Emacs enhancement library - <a href="http://www.nongnu.org/geiser/"
                                                            target="_blank">Geiser</a>).</p>
            <p class="software">Hint: you can launch any installed Common Lisp implementation using <span
                    style="font-family: monospace;">M-- M-x slime &lt;RET&gt; implementation-name &lt;RET&gt;</span>
                Emacs
                keyboard shortcut. Use the <span style="font-family: monospace;">&lt;TAB&gt;</span> key after the first
                <span style="font-family: monospace;">&lt;RET&gt;</span>
                to list available implementation names.</p>
            <p class="software"><b>Important</b>: what to do if a SLIME REPL evaluation request freezes? If you are
                running a
                multithreaded Lisp, you can save the existing Lisp environment by recurrent connection to the
                corresponding Lisp
                process. To accomplish this, use the <span class="mono">M-x slime-connect</span> command or simply
                command from
                the previous paragraph. For example, if you are running Clozure CL, type
                <span style="font-family: monospace;">M--&nbsp;M-x&nbsp;slime&nbsp;&lt;RET&gt;&nbsp;ccl&nbsp;&lt;RET&gt;</span>
                and answer 'No' to the following SLIME question. Clozure then will create additional thread in the
                current
                Lisp environment, and you could continue the work.</p>

            <h3>lispx-proxy</h3>

            <p class="software ">By using <a href="http://lispx-proxy.sourceforge.net" target="_blank" class="">lispx-proxy</a>
                you
                can easily launch Common Lisp, Clojure or Scheme files as scripts and create more complex application
                distributions.
            <p class="software "><b>lispx-proxy</b> is fully integrated into <b>&rho;Emacs</b>, and you could use all
                installed
                Common Lisp implementations and all <b>&rho;Emacs</b> ASDF repositories while executing Common Lisp
                code. <b>&rho;Emacs</b>
                knows about <b>lispx-proxy</b> `executable source code distribution' structure, and all ASDF
                systems and resources from the `shared' folder of a distribution will be available to the inferior Lisp
                (the
                distribution should be placed into one of the <b>&rho;Emacs</b> ASDF repositories). In other words, you
                can
                easily develop <b>lispx-proxy</b> applications with <b>&rho;Emacs</b>.</p>

            <h3>Emacs Command Shell</h3>

            <p>Emacs has ability to emulate command shell, which could be used to run Lisp implementations (by issuing
                the corresponding commands offered by <b>Rho Shell</b>) without overhead made
                by SLIME's Swank or Quicklisp. This may be useful when you want to reduce memory footprint of a
                generated program
                binary.
            </p>
            <p class="">It is also possible to run any Lisp implementation out of <b>Emacs</b> using system-wide <b>lispx-proxy</b>.
                For example,
                you could run <b>SBCL</b> command-line REPL with the following command: <span
                        style="font-family: monospace;">lispx -i sbcl --repl</span> issued in your regular
                <b>Windows</b> shell.
                To run Clojure REPL type <span style="font-family: monospace;">lispx -l clojure --repl</span> in your
                command
                prompt. Common Lisp package management systems are not automatically available with this scenario,
                although the REPL or scripts could use any already installed ASDF-systems or Java/Clojure libraries from
                `&lt;<b>&rho;Emacs</b> Home&gt;/clojure/lib'.</p>


            <h3>Common Lisp HyperSpec</h3>

            <p class="software">If necessary, <b>&rho;Emacs</b> allows to install a local copy of <b>Common Lisp HyperSpec</b> and
                browse keyword documentation
                from SLIME using <span style="font-family: monospace;">C-c&nbsp;C-d&nbsp;h</span> keyboard shortcut.</p>

            <h3>Dependency Management</h3>

            <h4>Common Lisp</h4>
            <div class="indented">
                <h5>&curren; ASDF Repository Structure &curren;</h5>
                <p>There are several places which are considered by <b>&rho;Emacs</b> as ASDF repositories:</p>

                <ul>
                    <li><span class="mono">&lt;HOME&gt;\lisp\repository</span> - a common repository to manually place
                        third party ASDF-systems;
                    </li>
                    <li><span class="mono">&lt;HOME&gt;\lisp</span> - a repository for folders of work-in-progress ASDF
                        systems
                        (use it for development);
                    </li>
                    <li><span class="mono">&lt;HOME&gt;\.quicklisp\dists\quicklisp\software</span> - a <b>Quicklisp</b>
                        repository for automatically installed systems;
                    </li>
                </ul>

                <p>where <span
                        class="mono">&lt;HOME&gt;</span> is a <b>&rho;Emacs</b> home directory. It's necessary to place
                    directories
                    with ASDF systems in one of these folders to make them accessible by ASDF. In addition, you can
                    store <b>Leiningen</b>
                    Clojure projects in <span class="mono">&lt;HOME&gt;\clojure</span> directory (it has no special
                    meaning for <b>Leiningen</b>).
                </p>

                <p class="">It's possible to disable any ASDF repository (including the
                    repositories inside <b>lispx-proxy</b> executable source distributions) by placing a file named
                    `.noindex' into it.</p>

                <h5>&curren; Qukclisp &curren;</h5>
                <p class="software"><b>Quicklisp</b> is automatically preloaded for CL implementations with built-in
                    ASDF2 or above
                    (currently for all implementations included into <b>&rho;Emacs</b>). It's immediately
                    possible to use <span style="font-family: monospace;">ql:apropos-system</span> and <span
                            style="font-family: monospace;">ql:quickload</span> functions (for details see the <a
                            href="http://www.quicklisp.org/beta/#basic-commands">manual</a> at <b>Quicklisp</b> home
                    site).</p>
            </div>

            <h4>Clojure</h4>
            <div class="indented">
                <p>You can manage Clojure dependencies with the <a href="http://github.com/technomancy/leiningen">Leiningen</a>
                    build tool and <a href="http://clojars.org">Clojars</a> repository. A typical use case looks like
                    the following:
                <p>

                <ul>
                    <li><span class="mono">M-x shell</span> - run <b>Emacs</b> command shell</li>
                    <li><span class="mono">cd "~/clojure"</span> - change the current dir. to the clojure user directory
                        under
                        the &rho;Emacs home directory
                    </li>
                    <li><span class="mono">lein new test-project</span> - create new project named `test-project'</li>
                    <li><span class="mono">cd test-project</span> - step into the project directory</li>
                    <li><span class="mono">lein deps</span> - download and install required dependencies (you have to
                        manually
                        configure dependencies in project.clj before this step).
                    </li>
                    <li><span class=""><span class="mono">M-x cider-jack-in</span> - load newly-created project with Cider,
            (it will use Clojure binary from the project dependencies for execution, not a binary included into <b>&rho;Emacs</b>)
                    </li>

                </ul>
                <p>
                    WARNING: a Clojure Java process may remain in memory after the Emacs shutdown, because it has not
                    been spawned
                    by Emacs itself. Although &rho;Emacs tries to work around this issue and close the process before
                    the Emacs
                    shutdown, be aware of this.
                </p>
            </div>

            <h4>Racket</h4>
            <div class="indented">
                <p>There is currently poor support of Scheme and <b>Racket</b> in <b>&rho;Emacs</b>. For package
                    management you can
                    use the built-in <b>Racket</b> PLaneT facility according to the <a
                            href="http://docs.racket-lang.org/planet/">documentation</a>.
                    <b>&rho;Emacs</b> brings nothing special in this case.</p>

            </div>
            <h3>Fasl Cache</h3>
            <p>Common Lisp implementations included in <b>&rho;Emacs</b> use ASDF2 translation facility to manage
                location of
                compiled fasl files. By default, compiled files are placed into `.fasl-cache' subfolder of the <b>&rho;Emacs</b>
                home
                directory. Fasl cache could be cleaned with `Clear Fasl Cache' menu item under the `((' menu group. It
                may be the first thing to do when something fails by no obvious reason.</p>


        </div>
        <h2 class="">Additional tools and languages</h2>
        <div>
            <div align="center">
                <table border="0" cellpadding="3" cellspacing="0" class="simple">
                    <tr>
                        <th>Item</th>
                        <th>Version</th>
                        <th>Included tools and libraries</th>
                    </tr>
                    <tr>
                        <td class="first"><a href="https://winpython.github.io/" target="_blank">Python</a></td>
                        <td><span class="">2.7.13</span></td>
                        <td class="first">The default Python <a href="https://pypi.python.org/pypi/pip">pip</a> package
                            manager is available as the `pip2' command
                        </td>
                    </tr>
                    <tr>
                        <td class="first"><a href="https://winpython.github.io/" target="_blank">Python</a></td>
                        <td><span class="">3.7.0</span></td>
                        <td class="first">The default Python <a href="https://pypi.python.org/pypi/pip">pip</a> package
                            manager is available as the `pip3' command
                        </td>
                    </tr>
                    <tr>
                        <td class="first"><a href="http://groovy-lang.org/" target="_blank">Groovy</a></td>
                        <td><span class="">2.4.12</span></td>
                        <td class="first"><a href="https://grails.org/">Grails</a> 3.3.0
                        </td>
                    </tr>
                    <tr>
                        <td class="first"><a
                                href="http://www.oracle.com/us/technologies/java/standard-edition/overview/index.html"
                                target="_blank">JDK</a></td>
                        <td><span class="">8.0u141</span></td>
                        <td class="first"><a href="http://ant.apache.org/">Apache ANT</a> 1.10.1,
                            <a href="http://maven.apache.org/">Apache Maven</a> 3.5,
                            <a href="https://gradle.org/">Gradle</a></b> 4.0.1
                    </tr>
                    <tr>
                        <td class="first"><a href="https://mingw-w64.org/doku.php">MinGW-x64</a></td>
                        <td><span class="">installed by pacman</span></td>
                        <td class="first"><a href="http://boost.org" target="_blank">Boost</a>
                    </tr>


                </table>
            </div>

        </div>
        <h2>System-wide tools</h2>
        <div>
            <p>The `rho' and `rhoc' utilities available
                through the system PATH could be used to open files from command line or to use Emacs as an
                external editor in some applications (this could be useful with panel file managers such as <a
                        href="http://farmanager.com/">FAR Manager</a>). The
                utilities accept only one file argument, though.</p>

            <p>The `<a href="http://lispx-proxy.sourceforge.net" target="_blank" class="">lispx</a>' command is also
                available
                at the command prompt and could be used for Lisp scripting. Common Lisp scripts can use all ASDF systems
                installed into
                &rho;Emacs repositories, Clojure scripts may load libraries placed in the `&lt;&rho;Emacs Home&gt;/clojure/lib'
                directory.</p>


        </div>


    </div>

    </div>

    <h3>Useful Links</h3>

    <ul>
        <li><a href="https://www.emacswiki.org/emacs/BooksAboutEmacs" target="_blank">Several books on Emacs</a>
        </li>
        <li><a href="http://xahlee.org/emacs/emacs.html" target="_blank">Xah's Emacs Tutorial</a>
        </li>
        <li class="developer"><a href="http://java.ociweb.com/mark/clojure/article.html">Clojure - Functional Programming for the JVM</a>
            - a brief Clojure introduction
        </li>
        <li class="developer"><a href="https://www.manning.com/books/the-joy-of-clojure-second-edition">The Joy of Clojure</a> - an advanced book on Clojure
        </li>
        <li class="developer"><a href="http://www.ccs.neu.edu/home/dorai/t-y-scheme/t-y-scheme.html">Teach Yourself Scheme in Fixnum
            Days</a> - a good introductory book on Scheme
        </li>
        <li class="developer"><a href="http://www.scheme.com/tspl3/">The Scheme Programming Language</a> - more advanced book on Scheme
        </li>
        <li class="developer"><a href="http://www.gigamonkeys.com/book/" target="_blank">Practical Common Lisp</a> - well known book on
            Lisp
        </li>
        <li class="developer"><a href="http://www.psg.com/~dlamkins/sl/" target="_blank">Successful Lisp</a> - yet another good book on
            Lisp
        </li>
        <li class="developer"><a href="http://www.paulgraham.com/onlisp.html">On Lisp</a> - an advanced book on Lisp</li>
        <li class="developer"><a href="http://letoverlambda.com/">Let Over Lambda</a> - even
            more advanced book on Lisp
        </li>

    </ul>

    <script language="javascript">
        <!--
        function mailMe() {
            window.location = 'mailto:gchristnsn' + '%40' + 'gmail.com';
        }

        -->
    </script>

    <div><p style="text-indent: 0px;">© 2010-2018 g/christensen (<a href="javascript:mailMe()">gchristnsn<img
            src="images/at.png" style="position: relative; top: 4px;" alt=".at." border="0">gmail.com</a>)</p></div>
</div>
</body>
</html>
